#! /bin/sh

### BEGIN INIT INFO
# Provides:          fw.sh
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: fw.sh
# Description:       firewall
### END INIT INFO

#
# Simple iptables management script (fw.sh)
# Jan Skalny <jan@skalny.sk>
#
# UPDATE HISTORY:
# 2017-02-24  created new script
#

IT=/sbin/iptables

modprobe ip_conntrack
modprobe ip_conntrack_ftp

echo 0 > /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv4/tcp_syncookies
echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/all/log_martians
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route

for TABLE in filter nat mangle; do
	$IT -t $TABLE -F
	$IT -t $TABLE -X
done

$IT -P INPUT DROP
$IT -P OUTPUT ACCEPT
$IT -P FORWARD DROP

$IT -N LOG_REJECT
	$IT -A LOG_REJECT -m limit --limit 5/sec --limit-burst 8 -j LOG \
		--log-ip-options --log-tcp-options --log-prefix fw-reject_ --log-level debug
	$IT -A LOG_REJECT -m limit --limit 5/sec --limit-burst 8 -j REJECT \
		--reject-with icmp-port-unreachable
	$IT -A LOG_REJECT -j DROP

$IT -N LOG_DROP
	$IT -A LOG_DROP -m limit --limit 5/sec --limit-burst 8 -j LOG \
		--log-ip-options --log-tcp-options --log-prefix fw-drop_ --log-level debug
	$IT -A LOG_DROP -j DROP

$IT -N LOG_ACCEPT
	$IT -A LOG_ACCEPT -m limit --limit 10/sec --limit-burst 20 -j LOG \
		--log-ip-options --log-tcp-options --log-prefix fw-accept_ --log-level debug
	$IT -A LOG_ACCEPT -j ACCEPT


$IT -N CHECK_IF
	# whitelist
	$IT -A CHECK_IF -s 92.240.244.36 -j RETURN
	$IT -A CHECK_IF -s 87.197.159.3 -j RETURN

	# block private and special ip ranges
	$IT -A CHECK_IF -s 127.0.0.0/8 -j LOG_DROP
	$IT -A CHECK_IF -s 0.0.0.0/8 -j LOG_DROP
	$IT -A CHECK_IF -s 169.254.0.0/16 -j LOG_DROP
	$IT -A CHECK_IF -s 192.0.2.0/24 -j LOG_DROP
	$IT -A CHECK_IF -s 204.152.64.0/23 -j LOG_DROP
	$IT -A CHECK_IF -s 224.0.0.0/3 -j DROP

	# only special ranges from private interfaces
	$IT -A CHECK_IF -i brDMZ -s 192.168.254.0/24 -j RETURN
	$IT -A CHECK_IF -i brINT -s 192.168.0.0/16 -j RETURN
	$IT -A CHECK_IF -i dac0.666 -s 10.10.10.0/30 -j RETURN

	# public interface can do anything (apart from private ranges
	$IT -A CHECK_IF -i brWAN -s 10.10.10.0/30 -j LOG_DROP
	$IT -A CHECK_IF -i brWAN -s 192.168.0.0/16 -j LOG_DROP
	$IT -A CHECK_IF -i brWAN -j RETURN

	# everything else is denied 
	#XXX: fix me (change to LOG_DROP)
	$IT -A CHECK_IF -j LOG_REJECT

############################################################

# loopback is allowed
$IT -A INPUT -i lo -j ACCEPT

# verify source address / interface
$IT -A INPUT -j CHECK_IF

# connection state
$IT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IT -A INPUT -m state --state INVALID -j LOG_DROP

### input ruleset

# ssh from everywhere
$IT -A INPUT -p tcp --dport 22 -j ACCEPT

# zabbix from monitor.netvor.sk
$IT -A INPUT -p tcp -s 92.240.244.110 --dport 10050 -j ACCEPT

# bacula from backup.netvor.sk
$IT -A INPUT -p tcp -s 194.160.5.138 --dport 9003 -j ACCEPT

# rate-limit ICMP
$IT -A INPUT -p icmp -m limit --limit 10/second -j ACCEPT
$IT -A INPUT -p icmp -j LOG_DROP 

# silently discard some shit 
# ... windows servers
for PORT in 137 138; do
	$IT -A INPUT -p udp --dport $PORT -j DROP
done
# ... ntp from cisco boxes
$IT -A INPUT -p udp --dport 123 -j DROP
# ... multicast from sanet
$IT -A INPUT -d 224.0.0.1 -j DROP

# default is reject
$IT -A INPUT -j LOG_REJECT

### FORWARDING
### default rule
$IT -A FORWARD -j LOG_REJECT
