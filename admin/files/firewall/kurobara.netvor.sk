#! /bin/sh

# Simple iptables management script (fw.sh)
# Jan Skalny <jan@skalny.sk>
#
# UPDATE HISTORY:
#
# 2015-01-06 
#  - migrated from old fw.sh

IT=/sbin/iptables

VPN="172.20.0.0/16"
BACKUP="194.160.5.138"

modprobe ip_conntrack
modprobe ip_conntrack_ftp

echo 1 > /proc/sys/net/ipv4/ip_forward
echo 1 > /proc/sys/net/ipv4/tcp_syncookies
echo 1 > /proc/sys/net/ipv4/conf/all/rp_filter
echo 1 > /proc/sys/net/ipv4/conf/all/log_martians
echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects
echo 0 > /proc/sys/net/ipv4/conf/all/accept_source_route

#XXX: pre potesenie openswan-u (ipsec)
for IF in /proc/sys/net/ipv4/conf/*; do
	echo 0 > $IF/send_redirects
	echo 0 > $IF/accept_redirects
done

for TABLE in filter nat mangle; do
	$IT -t $TABLE -F
	$IT -t $TABLE -X
done

$IT -P INPUT DROP
$IT -P OUTPUT ACCEPT
$IT -P FORWARD DROP


############################################################
### custom ACCEPT / REJECT / DROP actions

$IT -N LOG_REJECT
	$IT -A LOG_REJECT -m limit --limit 5/sec --limit-burst 8 -j LOG \
		--log-ip-options --log-tcp-options --log-prefix fw-reject_ --log-level debug
	$IT -A LOG_REJECT -m limit --limit 5/sec --limit-burst 8 -j REJECT \
		--reject-with icmp-port-unreachable
	$IT -A LOG_REJECT -j DROP

$IT -N LOG_DROP
	$IT -A LOG_DROP -m limit --limit 5/sec --limit-burst 8 -j LOG \
		--log-ip-options --log-tcp-options --log-prefix fw-drop_ --log-level debug
	$IT -A LOG_DROP -j DROP

$IT -N LOG_ACCEPT
	$IT -A LOG_ACCEPT -m limit --limit 10/sec --limit-burst 20 -j LOG \
		--log-ip-options --log-tcp-options --log-prefix fw-accept_ --log-level debug
	$IT -A LOG_ACCEPT -j ACCEPT


############################################################
### verify source address of packet (RFC 2827, RFC 1918)

$IT -N CHECK_IF
  # no-one can send from special address ranges!
	$IT -A CHECK_IF -s 127.0.0.0/8 -j LOG_DROP    # loopback
	$IT -A CHECK_IF -s 0.0.0.0/8 -j LOG_DROP   # DHCP
	$IT -A CHECK_IF -s 169.254.0.0/16 -j DROP   # APIPA
	$IT -A CHECK_IF -s 192.0.2.0/24 -j LOG_DROP   # RFC 3330
	$IT -A CHECK_IF -s 204.152.64.0/23 -j LOG_DROP  # RFC 3330
	$IT -A CHECK_IF -s 224.0.0.0/3 -j DROP      # multicast
	$IT -A CHECK_IF -s 100.64.0.0/10 -j LOG_DROP  # RFC 6598

	# public interface (eth0) MUST NOT containt any private address
	$IT -A CHECK_IF -i eth0 -s 0.0.0.0/8 -j DROP
	$IT -A CHECK_IF -i eth0 -s 192.168.0.0/16 -j LOG_DROP
	$IT -A CHECK_IF -i eth0 -s 172.16.0.0/12 -j LOG_DROP
	$IT -A CHECK_IF -i eth0 -s 10.0.0.0/8 -j LOG_DROP
	$IT -A CHECK_IF -i eth0 -j RETURN

	# IPMI to alfa.sportbetmedia.info
	$IT -A CHECK_IF -i eth1 -s 192.168.111.0/24 -j RETURN

	# VPN interface 
	$IT -A CHECK_IF -i tun0 -s $VPN -j RETURN

	# everything else is dropped!
	$IT -A CHECK_IF -j LOG_DROP

############################################################
### INPUT_* rulesets


############################################################
### INPUT ruleset

# loopback is allowed
$IT -A INPUT -i lo -j ACCEPT

# verify source address <-> interface mapping
$IT -A INPUT -j CHECK_IF

# connection tracking:
# - allow all related/established traffic
# - invalid packets MUST be dropped!
$IT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IT -A INPUT -m state --state INVALID -j LOG_DROP

### input ruleset

# ssh from everywhere
$IT -A INPUT -p tcp --dport ssh -j ACCEPT

# dns
$IT -A INPUT -p udp --dport 53 -j ACCEPT
$IT -A INPUT -p tcp --dport 53 -j ACCEPT

# mail services
for PORT in 25 465 993; do
	$IT -A INPUT -p tcp --dport $PORT -j ACCEPT
done

# apache
for PORT in 80 443; do
	$IT -A INPUT -p tcp --dport $PORT -j ACCEPT
done

# jabber 
for PORT in 5222 5223 5269; do
	$IT -A INPUT -p tcp --dport $PORT -j ACCEPT
done

# identd
$IT -A INPUT -p tcp --dport 113 -j ACCEPT

# openVPN
$IT -A INPUT -p tcp --dport 1194 -j ACCEPT
$IT -A INPUT -p udp --dport 1194 -j ACCEPT

# ftp
$IT -A INPUT -p tcp --dport 21 -j ACCEPT
$IT -A INPUT -p tcp --dport 32100:32200 -j ACCEPT

# zalohovanie (bacula)
$IT -A INPUT -p tcp --dport 9102 -s $BACKUP -j ACCEPT

# sakura a tsubaki sa mozu pripojit cez VPN na mysql
$IT -A INPUT -p tcp --dport 3306 -s 172.20.1.2 -j ACCEPT
$IT -A INPUT -p tcp --dport 3306 -s 172.20.1.3 -j ACCEPT

### icmp
$IT -A INPUT -p icmp -m limit --limit 10/second -j ACCEPT
$IT -A INPUT -p icmp -j LOG_DROP 

# syslog z nasich strojov
$IT -A INPUT -p tcp --dport 514 -s 92.240.244.25 -j ACCEPT
$IT -A INPUT -p udp --dport 514 -s 92.240.244.25 -j ACCEPT

# IPsec + PPP
$IT -A INPUT -p tcp --dport 1701 -j ACCEPT
$IT -A INPUT -p udp --dport 1701 -j ACCEPT
$IT -A INPUT -p udp --dport 500 -j ACCEPT
$IT -A INPUT -p udp --dport 4500 -j ACCEPT

# NSCA z intranet.verdesro.sk
$IT -A INPUT -p tcp --dport 5667 -s 92.240.244.52 -j ACCEPT

# zabbix agent (active checks)
$IT -A INPUT -p tcp --dport 10051 -s 92.240.244.0/25 -j ACCEPT
$IT -A INPUT -p tcp --dport 10051 -s 217.73.16.50 -j ACCEPT

# ignore junk from windows servers (samba)
for PORT in 137 138; do
	$IT -A INPUT -p udp --dport $PORT -j DROP
done

### default rule
$IT -A INPUT -j LOG_REJECT


############################################################
### FORWARD ruleset

# verify source address <-> interface mapping
$IT -A FORWARD -j CHECK_IF

# connection tracking:
# - allow all related/established traffic
# - invalid packets MUST be dropped!
$IT -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
$IT -A FORWARD -m state --state INVALID -j LOG_DROP

# VPN can go everywhere
$IT -A FORWARD -s $VPN -j ACCEPT

# minecraft running on cube.netvor.sk is accessible
for PORT in 9152 25565 25566; do
	$IT -A FORWARD -p tcp -d 172.20.1.1 --dport $PORT -j ACCEPT
done

# default je LOG_DROP
$IT -A FORWARD -j LOG_DROP 


############################################################
### NAT ruleset

# NAT na cube.netvor.sk (minecraft)
for PORT in 9152 25565 25566; do
	$IT -t nat -A PREROUTING -p tcp -d 92.240.244.36 --dport $PORT -j DNAT --to-destination 172.20.1.1
done

# NAT do internetu
$IT -t nat -A POSTROUTING -o eth0 -j MASQUERADE

